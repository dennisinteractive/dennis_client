<?php
/**
 * @file
 * Install, update and uninstall functions.
 */

/**
 * Implements hook_install().
 */
function dennis_client_install() {
  // Configure the taxonomy display.
  _dennis_client_set_taxonomy_display();

  // Add fields to article, review, gallery_adv.
  dennis_client_add_fields_to_bundles();

  // Create terms.
  _dennis_client_create_terms();

  // Migrate and delete legacy field.
  _dennis_client_migrate_field_sponsored();

  // Create contexts.
  _dennis_client_create_contexts();
}

/**
 * Implements hook_dennis_requirements_alter().
 */
function dennis_client_dennis_requirements_alter(&$requirements, $phase, $distro_schema_version) {
  if ($phase == 'runtime') {
    $t = get_t();

    if (variable_get('dennis_client_sponsored_tid', FALSE)) {
      // Add an error if the variable is set.
      $requirements['dennis_client_field_sponsor_variable'] = array(
        'title' => $t('Dennis Client'),
        'value' => $t('Distro 1.36.x'),
        'description' => _dennis_requirements_case_link(25449) .
          $t('The variable :name is still set. This is the old way of implementing sponsored content.',
            array(':name' => 'dennis_client_sponsored_tid')
          ),
        'severity' => REQUIREMENT_ERROR,
      );
      // Report any article type terms named 'Sponsored'.
      $sponsored_terms = taxonomy_get_term_by_name('sponsored', 'article_type');
      $sponsored_term = array_shift($sponsored_terms);
      if (!empty($sponsored_term)) {
        $requirements['dennis_client_field_sponsor_term'] = array(
          'title' => $t('Dennis Client'),
          'value' => $t('Distro 1.36.x'),
          'description' => _dennis_requirements_case_link(25449) .
            $t('An article type term named ":name" exists. This is the old way of implementing sponsored content.',
              array(':name' => $sponsored_term->name)
            ),
          'severity' => REQUIREMENT_ERROR,
        );
      }
    }

    $entity_type = 'node';
    $entity_info = entity_get_info();
    foreach ($entity_info[$entity_type]['bundles'] as $bundle) {
      $bundle_name = reset($bundle);
      if (field_info_instance($entity_type, 'field_sponsored', $bundle_name)) {
        $requirements['dennis_client_field_sponsor_' . $bundle_name] = array(
          'title' => $t('Dennis Client'),
          'value' => $t('Distro 1.36.x'),
          'description' => _dennis_requirements_case_link(25449) .
            $t('The field_sponsored needs to be replaced with field_content_partnership in content type: :bundle_name.',
              array(':bundle_name' => $bundle_name)
            ),
          'severity' => REQUIREMENT_ERROR,
        );
      }
    }
  }
}

/**
 * Creates contexts programmatically.
 */
function _dennis_client_create_contexts() {
  $context = new stdClass();
  $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
  $context->api_version = 3;
  $context->name = 'content_partnerships';
  $context->description = 'Show the content partnerships block.';
  $context->tag = 'Client';
  $context->conditions = array(
    'context_condition_content_partnerships' => array(
      'values' => array(
        1 => 1,
      ),
    ),
    'node' => array(
      'values' => array(
        'article' => 'article',
        'gallery_adv' => 'gallery_adv',
        'review' => 'review',
      ),
      'options' => array(
        'node_form' => '0',
      ),
    ),
  );
  $context->reactions = array(
    'block' => array(
      'blocks' => array(
        'dennis_client-content_partnerships' => array(
          'module' => 'dennis_client',
          'delta' => 'content_partnerships',
          'region' => 'content_top',
          'weight' => '-10',
        ),
      ),
    ),
  );
  $context->condition_mode = 1;

  context_save($context);

  $context = new stdClass();
  $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
  $context->api_version = 3;
  $context->name = 'content_partnerships_client_term';
  $context->description = 'Show the content partnerships block on the client page.';
  $context->tag = 'Client';
  $context->conditions = array(
    'taxonomy_term' => array(
      'values' => array(
        'clients' => 'clients',
      ),
      'options' => array(
        'term_form' => '0',
      ),
    ),
  );
  $context->reactions = array(
    'block' => array(
      'blocks' => array(
        'dennis_client-content_partnerships_client_term' => array(
          'module' => 'dennis_client',
          'delta' => 'content_partnerships_client_term',
          'region' => 'content_top',
          'weight' => '-10',
        ),
      ),
    ),
  );
  $context->condition_mode = 1;

  context_save($context);
}

/**
 * Ensure sponsored field exists for article and review node types.
 */
function dennis_client_update_7100() {
  // Field_sponsored has been removed.
  // dennis_client_ensure_field('field_sponsored');
}

/**
 * Use Category hub view to display client taxonomy.
 */
function dennis_client_update_7101() {
  _dennis_client_set_taxonomy_display();
}

/**
 * Redo hook_install() steps.
 */
function dennis_client_update_7102() {
  // Enable these modules on sites that already have dennis client enabled.
  module_enable(array(
      'link',
      'taxonomy_display',
      'number'
    )
  );

  // Configure the taxonomy display.
  _dennis_client_set_taxonomy_display();

  // Add fields to article, review, gallery_adv.
  dennis_client_add_fields_to_bundles();

  // Create terms.
  _dennis_client_create_terms();

  // Migrate and delete legacy field.
  _dennis_client_migrate_field_sponsored();

  // Create contexts.
  _dennis_client_create_contexts();
}

/**
 * Add client fields to taxonomy terms.
 */
function dennis_client_update_7103() {
  dennis_client_add_fields_to_bundles();
}
